var search_data = {"index":{"searchIndex":["ability","account","accountscontroller","accountshelper","admincontroller","adminhelper","applicationcontroller","applicationhelper","contact","contactmailer","group","groupmailer","grouprelations","groupscontroller","groupshelper","homecontroller","homehelper","immuneresponse","immuneresponsescontroller","immuneresponseshelper","macrophage","macrophagescontroller","macrophageshelper","oops","project","projectscontroller","projectshelper","sharedclassmethods","sharedinstancemethods","subscription","subscriptionscontroller","subscriptionshelper","user","usermailer","userscontroller","usershelper","about()","access_denied()","after_sign_in_path_for()","after_sign_out_path_for()","attribute_str()","cell_type_str()","check_ids()","compartment_str()","configure_permitted_parameters()","contact()","contact_message()","create()","create()","create()","create()","create()","create()","create()","create_contact()","create_notify()","cyto_chemo_kine_str()","datatype_str()","delete_file()","delete_file()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","display_alert()","display_error()","dosage_str()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","find_with_groups()","get_customer()","get_default_card()","get_owner_email()","group_list()","group_relate()","help()","index()","index()","index()","index()","index()","index()","index()","index()","invite_member()","is_valid()","layout_by_resource()","load_customer_info()","lookup_users()","macrophage_type_str()","member_email()","members()","members=()","members_list()","missing_document()","missing_document()","model_str()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_account()","notify()","oops()","password_reset()","persisted?()","plan_str()","project_list()","relate_groups()","relate_resources()","remove_member()","resource_list()","role_str()","save_with_stripe()","selection_options()","set_menu_active()","set_user()","show()","show()","show()","show()","show()","show()","status_str()","strain_name_options()","strain_status_str()","subscription_plans()","support()","to_csv()","to_csv()","treatment_str()","treatment_str()","units_str()","update()","update()","update()","update()","update()","update()","update()","update_with_stripe()","readme"],"longSearchIndex":["ability","account","accountscontroller","accountshelper","admincontroller","adminhelper","applicationcontroller","applicationhelper","contact","contactmailer","group","groupmailer","grouprelations","groupscontroller","groupshelper","homecontroller","homehelper","immuneresponse","immuneresponsescontroller","immuneresponseshelper","macrophage","macrophagescontroller","macrophageshelper","oops","project","projectscontroller","projectshelper","sharedclassmethods","sharedinstancemethods","subscription","subscriptionscontroller","subscriptionshelper","user","usermailer","userscontroller","usershelper","homecontroller#about()","applicationcontroller#access_denied()","applicationcontroller#after_sign_in_path_for()","applicationcontroller#after_sign_out_path_for()","sharedinstancemethods#attribute_str()","immuneresponse#cell_type_str()","ability#check_ids()","immuneresponse#compartment_str()","applicationcontroller#configure_permitted_parameters()","homecontroller#contact()","contactmailer#contact_message()","accountscontroller#create()","groupscontroller#create()","immuneresponsescontroller#create()","macrophagescontroller#create()","projectscontroller#create()","subscriptionscontroller#create()","userscontroller#create()","homecontroller#create_contact()","groupscontroller#create_notify()","immuneresponse#cyto_chemo_kine_str()","macrophage#datatype_str()","immuneresponse#delete_file()","macrophage#delete_file()","account#destroy()","accountscontroller#destroy()","groupscontroller#destroy()","immuneresponsescontroller#destroy()","macrophagescontroller#destroy()","projectscontroller#destroy()","subscriptionscontroller#destroy()","userscontroller#destroy()","oops#display_alert()","oops#display_error()","macrophage#dosage_str()","accountscontroller#edit()","groupscontroller#edit()","immuneresponsescontroller#edit()","macrophagescontroller#edit()","projectscontroller#edit()","subscriptionscontroller#edit()","userscontroller#edit()","sharedclassmethods#find_with_groups()","account#get_customer()","account#get_default_card()","groupshelper#get_owner_email()","groupshelper#group_list()","project#group_relate()","admincontroller#help()","admincontroller#index()","groupscontroller#index()","homecontroller#index()","immuneresponsescontroller#index()","macrophagescontroller#index()","projectscontroller#index()","subscriptionscontroller#index()","userscontroller#index()","groupscontroller#invite_member()","account#is_valid()","applicationcontroller#layout_by_resource()","account#load_customer_info()","groupscontroller#lookup_users()","macrophage#macrophage_type_str()","groupmailer#member_email()","group#members()","group#members=()","group#members_list()","accountscontroller#missing_document()","applicationcontroller#missing_document()","immuneresponse#model_str()","ability::new()","accountscontroller#new()","contact::new()","groupscontroller#new()","immuneresponsescontroller#new()","macrophagescontroller#new()","projectscontroller#new()","subscriptionscontroller#new()","userscontroller#new()","usermailer#new_account()","groupscontroller#notify()","admincontroller#oops()","admincontroller#password_reset()","contact#persisted?()","subscription#plan_str()","projectshelper#project_list()","grouprelations#relate_groups()","grouprelations#relate_resources()","groupscontroller#remove_member()","groupshelper#resource_list()","user#role_str()","account#save_with_stripe()","applicationhelper#selection_options()","applicationcontroller#set_menu_active()","accountscontroller#set_user()","groupscontroller#show()","immuneresponsescontroller#show()","macrophagescontroller#show()","projectscontroller#show()","subscriptionscontroller#show()","userscontroller#show()","account#status_str()","macrophageshelper#strain_name_options()","immuneresponse#strain_status_str()","subscriptionshelper#subscription_plans()","homecontroller#support()","immuneresponse::to_csv()","macrophage::to_csv()","immuneresponse#treatment_str()","macrophage#treatment_str()","immuneresponse#units_str()","accountscontroller#update()","groupscontroller#update()","immuneresponsescontroller#update()","macrophagescontroller#update()","projectscontroller#update()","subscriptionscontroller#update()","userscontroller#update()","account#update_with_stripe()",""],"info":[["Ability","","Ability.html","",""],["Account","","Account.html","","<p>The Account model is used to store the Stripe.com customer_id and the\ncurrent status of the account. …\n"],["AccountsController","","AccountsController.html","",""],["AccountsHelper","","AccountsHelper.html","",""],["AdminController","","AdminController.html","",""],["AdminHelper","","AdminHelper.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Contact","","Contact.html","","<p>This model is used to hold the contact request. It is not tied to a\ndatabase table, but just holds the …\n"],["ContactMailer","","ContactMailer.html","","<p>The contact mailer is for managing the contact form  request on the web\nservice.\n"],["Group","","Group.html","","<p>The Group class allows us to authorize a group of users to access a primary\nresource, such as a Project …\n"],["GroupMailer","","GroupMailer.html","",""],["GroupRelations","","GroupRelations.html","","<p>The GroupRelations module provides utility methods for handling \nrelationships between resources and …\n"],["GroupsController","","GroupsController.html","","<p>The GroupsController is responsible for managing the actions  associated\nwith managing user groups that …\n"],["GroupsHelper","","GroupsHelper.html","",""],["HomeController","","HomeController.html","","<p>The HomeController is responsible for presenting the public interface to\nthe web service. Most web services …\n"],["HomeHelper","","HomeHelper.html","",""],["ImmuneResponse","","ImmuneResponse.html","","<p>The ImmuneResponse model holds the experimental results data from the\nimmune reponse studies. It has …\n"],["ImmuneResponsesController","","ImmuneResponsesController.html","","<p>The ImmuneResponsesController is responsible for managing the functions\nassociated with interacting with …\n"],["ImmuneResponsesHelper","","ImmuneResponsesHelper.html","",""],["Macrophage","","Macrophage.html","","<p>The Macrophage model class is used to respresent the data storage for\nmacrophage expirements. The model …\n"],["MacrophagesController","","MacrophagesController.html","","<p>The MacrophagesController class is responsible for managing the views and\ndata interactions for the  …\n"],["MacrophagesHelper","","MacrophagesHelper.html","","<p>The MacrophagesHelper module holds methods used to facilitate the views for\nthe Macrophages resource. …\n"],["Oops","","Oops.html","","<p>The Oops module provides utility methods for handling redirection to an\nerror page. The module can be …\n"],["Project","","Project.html","","<p>The Project model class represents an example primary resource for the\nservice. This model could be substituted …\n"],["ProjectsController","","ProjectsController.html","","<p>The ProjectsController class is responsible for managing project resources\nassociated with the web service. …\n"],["ProjectsHelper","","ProjectsHelper.html","",""],["SharedClassMethods","","SharedClassMethods.html","","<p>The SharedMethods module is used for storing methods that will be accross\nmultiple Rails model classes. …\n"],["SharedInstanceMethods","","SharedInstanceMethods.html","","<p>The SharedInstanceMethods module is used for storing methods that will be\naccross multiple Rails model …\n"],["Subscription","","Subscription.html","","<p>The Subcription model holds information about a subscription plan that will\nbe created on the Stripe.com …\n"],["SubscriptionsController","","SubscriptionsController.html","","<p>The SubscriptionsController is responsible for subscribing a customer to\nour web service. It depends …\n"],["SubscriptionsHelper","","SubscriptionsHelper.html","",""],["User","","User.html","","<p>The User model is responsible for holding information associated with a\nuser account. This model is then …\n"],["UserMailer","","UserMailer.html","",""],["UsersController","","UsersController.html","","<p>The UsersController is the administrative controller for managing users of\nthe web service. It is targeted …\n"],["UsersHelper","","UsersHelper.html","",""],["about","HomeController","HomeController.html#method-i-about","()","<p>The about page will present a page for telling the customer about your web\nservice or company.\n"],["access_denied","ApplicationController","ApplicationController.html#method-i-access_denied","(exception)","<p>The access_denied method is the controller method for catching a CanCan\nexception for an unauthorized …\n"],["after_sign_in_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_in_path_for","(resource)","<p>The after_sign_in_path_for method will check to see if there the user needs\nto fill out their profile …\n"],["after_sign_out_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_out_path_for","(resource)","<p>A Devise method override that redirects the user to the home_url after they\nhave signed out the system. …\n"],["attribute_str","SharedInstanceMethods","SharedInstanceMethods.html#method-i-attribute_str","(ahash, value)","<p>The attribute_str method is a utility instance method that is used to print\nthe human readable string …\n"],["cell_type_str","ImmuneResponse","ImmuneResponse.html#method-i-cell_type_str","()","<p>The cell_type_str method is a helper method to print the human readable\nstring of the cell type value. …\n"],["check_ids","Ability","Ability.html#method-i-check_ids","(resource, user)","<p>The check_ids method will look for group id’s associated with both the user\nand the resource. If they …\n"],["compartment_str","ImmuneResponse","ImmuneResponse.html#method-i-compartment_str","()","<p>The compartment_str method is a helper method to print the human readable\nstring of the compartment option …\n"],["configure_permitted_parameters","ApplicationController","ApplicationController.html#method-i-configure_permitted_parameters","()","<p>Devise strong parameters method for allowing additional attributes to be\nmass updated in the User model. …\n"],["contact","HomeController","HomeController.html#method-i-contact","()","<p>The contact method presents a form for contacting us. The form then calls\nthe create_contact method for …\n"],["contact_message","ContactMailer","ContactMailer.html#method-i-contact_message","(contact)","<p>The standard contact request message.\n"],["create","AccountsController","AccountsController.html#method-i-create","()","<p>POST   /admin/users/:user_id/accounts(.:format)\n<p>The create method will update the account settings with …\n"],["create","GroupsController","GroupsController.html#method-i-create","()","<p>POST /groups POST /groups.json\n<p>The create method will create the group add the current user to  the group.\n…\n"],["create","ImmuneResponsesController","ImmuneResponsesController.html#method-i-create","()","<p>POST /immune_responses POST /immune_responses.json\n<p>The create method will generate a new ImmuneResponse …\n"],["create","MacrophagesController","MacrophagesController.html#method-i-create","()","<p>POST /macrophages POST /macrophages.json\n<p>The create method creates a new macrophage record and sets the …\n"],["create","ProjectsController","ProjectsController.html#method-i-create","()","<p>POST /projects POST /projects.json\n<p>The create method will create a new project and relate any selected …\n"],["create","SubscriptionsController","SubscriptionsController.html#method-i-create","()","<p>POST /subscriptions POST /subscriptions.json\n<p>The create method will fill out the subscription options …\n"],["create","UsersController","UsersController.html#method-i-create","()","<p>POST /admin/users\n<p>The create enables creation of a new user account by a service\nadministrator. Once a …\n"],["create_contact","HomeController","HomeController.html#method-i-create_contact","()","<p>The create_contact method uses a mailer class to generate an email message\nto us via our website.\n"],["create_notify","GroupsController","GroupsController.html#method-i-create_notify","(members, group)","<p>The create_notify method will take a hash of email addresses and User\nrecords. For each email address …\n"],["cyto_chemo_kine_str","ImmuneResponse","ImmuneResponse.html#method-i-cyto_chemo_kine_str","()","<p>The cyto_chemo_kine_str method is a helper method to print the human\nreadable string of the cyto_chemo_kine …\n"],["datatype_str","Macrophage","Macrophage.html#method-i-datatype_str","()","<p>The datatype_str helper method returns the human readable string that\nrepresents the data type identifier. …\n"],["delete_file","ImmuneResponse","ImmuneResponse.html#method-i-delete_file","()","<p>This callback method will delete attached file, if the corresponding\nMacrophage model object is destroyed. …\n"],["delete_file","Macrophage","Macrophage.html#method-i-delete_file","()","<p>This callback method will delete attached file, if the corresponding\nMacrophage model object is destroyed. …\n"],["destroy","Account","Account.html#method-i-destroy","()","<p>The destory method overides the standard destory method for ActiveModel.\nThis version will delete Stripe.com …\n"],["destroy","AccountsController","AccountsController.html#method-i-destroy","()","<p>DELETE /admin/users/:user_id/accounts/:id(.:format)\n<p>The destroy method will destroy the account record …\n"],["destroy","GroupsController","GroupsController.html#method-i-destroy","()","<p>DELETE /groups/1 DELETE /groups/1.json\n<p>The standard destroy action with a call to unrelate all resources …\n"],["destroy","ImmuneResponsesController","ImmuneResponsesController.html#method-i-destroy","()","<p>DELETE /immune_responses/1 DELETE /immune_responses/1.json\n<p>The delete method will destroy the specified …\n"],["destroy","MacrophagesController","MacrophagesController.html#method-i-destroy","()","<p>DELETE /macrophages/1 DELETE /macrophages/1.json\n"],["destroy","ProjectsController","ProjectsController.html#method-i-destroy","()","<p>DELETE /projects/1 DELETE /projects/1.json\n<p>The destroy project method will delete the project, but does …\n"],["destroy","SubscriptionsController","SubscriptionsController.html#method-i-destroy","()","<p>DELETE /subscriptions/1 DELETE /subscriptions/1.json\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>DELETE /admin/users/:id\n<p>The destory action will delete the user. The user model should also include\nany …\n"],["display_alert","Oops","Oops.html#method-i-display_alert","(args)","<p>The display_alert method will display an alert message to an error page. It\ntakes a hash as an argument, …\n"],["display_error","Oops","Oops.html#method-i-display_error","(args)","<p>The display_error method will display an error message to an error page. It\ntakes a hash as an argument, …\n"],["dosage_str","Macrophage","Macrophage.html#method-i-dosage_str","()","<p>The dosage_str helper method returns the human readable string that\nrepresents the dosage identifier. …\n"],["edit","AccountsController","AccountsController.html#method-i-edit","()","<p>GET    /admin/users/:user_id/accounts/:id/edit\n<p>The edit action will present the user with a form for editing …\n"],["edit","GroupsController","GroupsController.html#method-i-edit","()","<p>GET /groups/1/edit\n<p>This action present the edit view with the list of resources that are\ncurrently owned …\n"],["edit","ImmuneResponsesController","ImmuneResponsesController.html#method-i-edit","()","<p>GET /immune_responses/1/edit\n<p>The edit method presents the edit form for the ImmuneResponse result\nrecord. …\n"],["edit","MacrophagesController","MacrophagesController.html#method-i-edit","()","<p>GET /macrophages/1/edit\n<p>The edit method presents the edit form and loads the requested Macrophage\nrecord. …\n"],["edit","ProjectsController","ProjectsController.html#method-i-edit","()","<p>GET /projects/1/edit\n<p>The standard edit method will display the edit form and include the ability\nto select …\n"],["edit","SubscriptionsController","SubscriptionsController.html#method-i-edit","()","<p>GET /subscriptions/1/edit\n<p>Standard edit action and view. Instructions added to the view about\nupdating …\n"],["edit","UsersController","UsersController.html#method-i-edit","()","<p>GET /admin/users/:id\n<p>The edit action will display a standard edit form for user account.\n"],["find_with_groups","SharedClassMethods","SharedClassMethods.html#method-i-find_with_groups","(user)","<p>The find_with_groups class scope method will return all resource records\nthat have a group in common …\n"],["get_customer","Account","Account.html#method-i-get_customer","()","<p>The get_customer method retrieves the customer information from Stripe.com.\nIt then stores some of the …\n"],["get_default_card","Account","Account.html#method-i-get_default_card","(customer)","<p>The get_default_card is a method that will return the default card\nassociated with a customer account. …\n"],["get_owner_email","GroupsHelper","GroupsHelper.html#method-i-get_owner_email","(group)","<p>The get_owner is a view helper method that will return either the email\naddress of the group owner or …\n"],["group_list","GroupsHelper","GroupsHelper.html#method-i-group_list","(params)","<p>The group_list method will return a list of groups that are owned by the\nuser. If no groups are found …\n"],["group_relate","Project","Project.html#method-i-group_relate","(group_ids)","<p>The GroupRelations module has some utility methods that will enable the\nproject to interact with user …\n"],["help","AdminController","AdminController.html#method-i-help","()","<p>The help function will present a help page for the service.\n"],["index","AdminController","AdminController.html#method-i-index","()","<p>The index action presents the dashboard or main landing page after logging\ninto the service.\n"],["index","GroupsController","GroupsController.html#method-i-index","()","<p>GET /groups GET /groups.json\n<p>Standard listing of user groups and membership.\n"],["index","HomeController","HomeController.html#method-i-index","()","<p>The index action will present the user with the primary landing page for\nthe service.\n"],["index","ImmuneResponsesController","ImmuneResponsesController.html#method-i-index","()","<p>GET /immune_responses GET /immune_responses.json\n<p>The index method enables users to list all the available …\n"],["index","MacrophagesController","MacrophagesController.html#method-i-index","()","<p>GET /macrophages GET /macrophages.json\n<p>The index method provides the ability to view all the macrophage …\n"],["index","ProjectsController","ProjectsController.html#method-i-index","()","<p>GET /projects GET /projects.json\n<p>The index method displays the current users list of projects. If the …\n"],["index","SubscriptionsController","SubscriptionsController.html#method-i-index","()","<p>GET /subscriptions GET /subscriptions.json\n<p>The index method will only be available for service administrators …\n"],["index","UsersController","UsersController.html#method-i-index","()","<p>GET /admin/users\n<p>The index action will present a list of system users. It will allow the\nsystem administrator …\n"],["invite_member","GroupsController","GroupsController.html#method-i-invite_member","(group, user)","<p>The invite_member method will resend an membership notification  to an\nexisting member. If the member …\n"],["is_valid","Account","Account.html#method-i-is_valid","(params)","<p>The is_valid helper method checks to make sure the user included\ncardholder_name, cardholder_email, and …\n"],["layout_by_resource","ApplicationController","ApplicationController.html#method-i-layout_by_resource","()","<p>Callback function to specify the layout based on the controller that is in\nuse.\n"],["load_customer_info","Account","Account.html#method-i-load_customer_info","(customer)","<p>This helper method is used to load card and customer information into the\ninstance variables for the …\n"],["lookup_users","GroupsController","GroupsController.html#method-i-lookup_users","(group)","<p>The lookup_user method will take an string of white-space separated email\naddresses and return a hash …\n"],["macrophage_type_str","Macrophage","Macrophage.html#method-i-macrophage_type_str","()","<p>The macrophage_type_str method will return the human readable form of the\nmacrophage type identifier. …\n"],["member_email","GroupMailer","GroupMailer.html#method-i-member_email","(user, group)","<p>The member_email method will notify a new member of a group that he/she has\nbeen added by the group owner. …\n"],["members","Group","Group.html#method-i-members","()","<p>VIRTUAL ATTRIBUTE METHDS\n<p>The members and the members= are methods for creating virtual  attributes\nthat …\n"],["members=","Group","Group.html#method-i-members-3D","(value)",""],["members_list","Group","Group.html#method-i-members_list","()","<p>The members_list method will parse the membership list of email addresses\ncheck them for valid email …\n"],["missing_document","AccountsController","AccountsController.html#method-i-missing_document","(exception)","<p>The missing_document method is the controller method for catching a Mongoid\nMongoid::Errors::DocumentNotFound …\n"],["missing_document","ApplicationController","ApplicationController.html#method-i-missing_document","(exception)","<p>The missing_document method is the controller method for catching a Mongoid\nMongoid::Errors::DocumentNotFound …\n"],["model_str","ImmuneResponse","ImmuneResponse.html#method-i-model_str","()","<p>The model_str method is a helper method to print the human readable string\nof the model option value. …\n"],["new","Ability","Ability.html#method-c-new","(user)",""],["new","AccountsController","AccountsController.html#method-i-new","()","<p>GET    /admin/users/:user_id/accounts/new(.:format)\n<p>The new action will present a AJAX based form to user …\n"],["new","Contact","Contact.html#method-c-new","(attributes = {})","<p>INSTANCE METHODS ————————————————–\n"],["new","GroupsController","GroupsController.html#method-i-new","()","<p>GET /groups/new\n<p>Since we support a resource based authorization system, the new method\nshould show the …\n"],["new","ImmuneResponsesController","ImmuneResponsesController.html#method-i-new","()","<p>GET /immune_responses/new\n<p>The new method presents a new ImmuneResponse results form, which also\nincludes …\n"],["new","MacrophagesController","MacrophagesController.html#method-i-new","()","<p>GET /macrophages/new\n<p>Standard new method with attributes for showing projects and strains\n"],["new","ProjectsController","ProjectsController.html#method-i-new","()","<p>GET /projects/new\n<p>The new method will show the user a new project form. It will also lookup\nany groups …\n"],["new","SubscriptionsController","SubscriptionsController.html#method-i-new","()","<p>GET /subscriptions/new\n<p>This method will present the customer with a new subscription for, if the\ncustomer …\n"],["new","UsersController","UsersController.html#method-i-new","()","<p>GET /admin/users/new\n<p>The new action enables an administrator create a new user account. It\npresents a …\n"],["new_account","UserMailer","UserMailer.html#method-i-new_account","(user)","<p>Email for new user account. It will email the user their login, password, a\nlogin link, and a link to …\n"],["notify","GroupsController","GroupsController.html#method-i-notify","()","<p>PUT /groups/1/notify\n<p>The notify method will resend a group invite notification message to a\nsingle group …\n"],["oops","AdminController","AdminController.html#method-i-oops","()","<p>Error action and view to display errors to the user.\n"],["password_reset","AdminController","AdminController.html#method-i-password_reset","()","<p>Password_reset presents the password reset page.\n"],["persisted?","Contact","Contact.html#method-i-persisted-3F","()",""],["plan_str","Subscription","Subscription.html#method-i-plan_str","()","<p>The plan_str returns a string that represents the name of the subscription\nplan.\n"],["project_list","ProjectsHelper","ProjectsHelper.html#method-i-project_list","(user)","<p>The project_list method will return a list of projects that are accessible\nby the user. If no projects …\n"],["relate_groups","GroupRelations","GroupRelations.html#method-i-relate_groups","(params)","<p>The relate_groups method will relate a series of user groups to  a given\nresource. The method takes a …\n"],["relate_resources","GroupRelations","GroupRelations.html#method-i-relate_resources","(params)","<p>The relate_resources method will relate the requested resources to  the\ngroup. It is expecting an parameter …\n"],["remove_member","GroupsController","GroupsController.html#method-i-remove_member","()","<p>PUT groups/1/remove_member\n<p>The remove_member method will remove one group member.\n"],["resource_list","GroupsHelper","GroupsHelper.html#method-i-resource_list","(params)","<p>The resource_list method will set an instance variable called  @resources\nto hold an array of hashes. …\n"],["role_str","User","User.html#method-i-role_str","()","<p>The role_str returns the string representation of the role assigned to the\nuser.\n"],["save_with_stripe","Account","Account.html#method-i-save_with_stripe","(params)","<p>The save_with_stripe will save the account record and corresponding stripe\ncustomer_id in the database. …\n"],["selection_options","ApplicationHelper","ApplicationHelper.html#method-i-selection_options","(selection_hash)","<p>The selection_options method generates a selection list array based on a\nhash that is pasted as the single …\n"],["set_menu_active","ApplicationController","ApplicationController.html#method-i-set_menu_active","()","<p>This before_filter method is responsible for setting a menu item to active.\nWe can add multiple check …\n"],["set_user","AccountsController","AccountsController.html#method-i-set_user","()","<p>Use callbacks to share common setup or constraints between actions. We do\nthe following actions:\n<p>Try to …\n"],["show","GroupsController","GroupsController.html#method-i-show","()","<p>GET /groups/1 GET /groups/1.json\n<p>Shows the group information and the list of group members. It also  allows\n…\n"],["show","ImmuneResponsesController","ImmuneResponsesController.html#method-i-show","()","<p>GET /immune_responses/1 GET /immune_responses/1.json\n<p>The show method shows the ImmuneRespnose attributes, …\n"],["show","MacrophagesController","MacrophagesController.html#method-i-show","()","<p>GET /macrophages/1 GET /macrophages/1.json\n<p>Standard show method. We use model helper methods for displaying …\n"],["show","ProjectsController","ProjectsController.html#method-i-show","()","<p>GET /projects/1 GET /projects/1.json\n<p>The show method will show the project record. The corresponding view …\n"],["show","SubscriptionsController","SubscriptionsController.html#method-i-show","()","<p>GET /subscriptions/1 GET /subscriptions/1.json\n<p>The show method will display the list of subscription attributes …\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>GET /admin/users/:id\n<p>The show action displays the user record and a subset of the fields. It\ndoes not …\n"],["status_str","Account","Account.html#method-i-status_str","()","<p>The status_str method returns the account status in string format\n"],["strain_name_options","MacrophagesHelper","MacrophagesHelper.html#method-i-strain_name_options","()","<p>The strain_name_options method is designed to provide a list of GBS strain\nnames for the view. In the …\n"],["strain_status_str","ImmuneResponse","ImmuneResponse.html#method-i-strain_status_str","()","<p>The strain_status method is a helper method to print the human readable\nstring of the strain status option …\n"],["subscription_plans","SubscriptionsHelper","SubscriptionsHelper.html#method-i-subscription_plans","()","<p>The subscription_plans is a view helper to list the available subscriptions\nthat are configured into …\n"],["support","HomeController","HomeController.html#method-i-support","()","<p>The support acction will present a support page to the customer.\n"],["to_csv","ImmuneResponse","ImmuneResponse.html#method-c-to_csv","(options = {})","<p>The to_csv class method converts the model contents to CSV format. It takes\none optional parameter.\n<p>options …\n\n"],["to_csv","Macrophage","Macrophage.html#method-c-to_csv","(options = {})","<p>The to_csv class method converts the model contents to CSV format. It takes\none optional parameter.\n<p>options …\n\n"],["treatment_str","ImmuneResponse","ImmuneResponse.html#method-i-treatment_str","()","<p>The treatment method is a helper method to print the human readable string\nof the treamtment option value. …\n"],["treatment_str","Macrophage","Macrophage.html#method-i-treatment_str","()","<p>The treatment_str helper method returns the human readable string that\nrepresents the treatment identifier. …\n"],["units_str","ImmuneResponse","ImmuneResponse.html#method-i-units_str","()","<p>The units_str method is a helper method to print the human readable string\nof the units option value. …\n"],["update","AccountsController","AccountsController.html#method-i-update","()","<p>PUT or PATCH  /admin/users/:user_id/accounts/:id(.:format)\n<p>Updates an embedded account record for a user …\n"],["update","GroupsController","GroupsController.html#method-i-update","()","<p>PATCH/PUT /groups/1 PATCH/PUT /groups/1.json\n<p>The update action allows the user to update the group attributes, …\n"],["update","ImmuneResponsesController","ImmuneResponsesController.html#method-i-update","()","<p>PATCH/PUT /immune_responses/1 PATCH/PUT /immune_responses/1.json\n<p>The update method will update an existing …\n"],["update","MacrophagesController","MacrophagesController.html#method-i-update","()","<p>PATCH/PUT /macrophages/1 PATCH/PUT /macrophages/1.json\n"],["update","ProjectsController","ProjectsController.html#method-i-update","()","<p>PATCH/PUT /projects/1 PATCH/PUT /projects/1.json\n<p>The update will update the Project model object including …\n"],["update","SubscriptionsController","SubscriptionsController.html#method-i-update","()","<p>PATCH/PUT /subscriptions/1 PATCH/PUT /subscriptions/1.json\n"],["update","UsersController","UsersController.html#method-i-update","()","<p>UPDATE /admin/users/:id\n<p>The update method will modify the submitted attributes of the User record.\n"],["update_with_stripe","Account","Account.html#method-i-update_with_stripe","(params)","<p>The update with_stripe method will update the account record and\ncorresponding stripe customer_id in …\n"],["README","","README_rdoc.html","","<p>Introduction\n<p>This project is a prototype application designed to support a specific\nmedical research project. …\n"]]}}